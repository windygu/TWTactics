<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActivePlayerForm_AskToSetSelf" xml:space="preserve">
    <value>Je hebt jezelf nog niet geselecteerd.
Nu doen?</value>
  </data>
  <data name="ActivePlayerForm_AskToSetSelf_Title" xml:space="preserve">
    <value>Actieve speler selecteren</value>
  </data>
  <data name="LoadWorldForm_NoWorldSelected" xml:space="preserve">
    <value>Geen wereld geselecteerd!</value>
  </data>
  <data name="LoadWorldForm_SettingsGrid_ColumnCreatedAt" xml:space="preserve">
    <value>Aangemaakt op</value>
  </data>
  <data name="LoadWorldForm_SettingsGrid_ColumnName" xml:space="preserve">
    <value>Naam</value>
  </data>
  <data name="MainForm_ScreenshotSaved" xml:space="preserve">
    <value>Screenshot bewaard als {0}</value>
  </data>
  <data name="MainForm_SetHomeLocation" xml:space="preserve">
    <value>Gebruik de huidige positie op de kaart als je thuislocatie?
(Je kan de Home toets gebruiken om er naartoe te springen)</value>
  </data>
  <data name="MainForm_SetHomeLocation_Title" xml:space="preserve">
    <value>Zet thuislocatie</value>
  </data>
  <data name="MainForm_StatusDataTime_Tooltip" xml:space="preserve">
    <value>Vergelijken met de data van {0} geleden</value>
    <comment>{0} = time difference</comment>
  </data>
  <data name="NewWorldForm_Created" xml:space="preserve">
    <value>Een nieuwe wereld is aangemaakt!

Klik rechts op een dorp indien je niet goed weet hoe te beginnen.</value>
  </data>
  <data name="NewWorldForm_CreatedTitle" xml:space="preserve">
    <value>Wereld Aangemaakt!</value>
  </data>
  <data name="NewWorldForm_Created_NoYou1" xml:space="preserve">
    <value>Je kan jezelf later nog selecteren in het Wereld -&gt; 'Selecteer Actieve Speler' menu</value>
  </data>
  <data name="NewWorldForm_Created_NoYou2" xml:space="preserve">
    <value>Hou er rekening mee dat bijvoorbeeld de aanvalsplanner veel beter werkt als je jezelf geselecteerd hebt.</value>
  </data>
  <data name="PlayerTribeDropdown_ColumnImage" xml:space="preserve">
    <value>Icon</value>
  </data>
  <data name="PlayerTribeDropdown_ColumnImage_Tooltip" xml:space="preserve">
    <value>Een dorp, speler of stam</value>
  </data>
  <data name="PlayerTribeDropdown_ColumnRank" xml:space="preserve">
    <value>Rank</value>
  </data>
  <data name="PlayerTribeDropdown_ColumnText" xml:space="preserve">
    <value>Rank en punten</value>
  </data>
  <data name="PlayerTribeDropdown_ColumnText_Tooltip" xml:space="preserve">
    <value>Extra informatie</value>
  </data>
  <data name="PlayerTribeDropdown_ColumnValue" xml:space="preserve">
    <value>Naam</value>
  </data>
  <data name="PlayerTribeDropdown_ColumnValue_Tooltip" xml:space="preserve">
    <value>De spelersnaam, de stamtag of de dorpscoordinaten</value>
  </data>
  <data name="PlayerTribeDropdown_ColumnVisible" xml:space="preserve">
    <value>Zichtbaar</value>
  </data>
  <data name="PlayerTribeDropdown_ColumnVisible_Tooltip" xml:space="preserve">
    <value>Is minstens 1 dorp zichtbaar op de kaart</value>
  </data>
  <data name="PlayerTribeDropdown_EmptyTooltip1" xml:space="preserve">
    <value>Voer {0} in</value>
  </data>
  <data name="PlayerTribeDropdown_EmptyTooltip_Player" xml:space="preserve">
    <value>, spelersnaam</value>
  </data>
  <data name="PlayerTribeDropdown_EmptyTooltip_Tribe" xml:space="preserve">
    <value>, stamtag</value>
  </data>
  <data name="VillageCoordinatesImporterForm_Help" xml:space="preserve">
    <value>Dorpscoordinaten importeren?</value>
  </data>
  <data name="VillageCoordinatesImporterForm_Help_Title" xml:space="preserve">
    <value>Plak een dorpslijst in het linker invoerveld en ze zullen in de grid rechts tevoorschijn komen.

Gebruik Control +A om alle geïmporteerde dorpen te selecteren. Klik rechts om hun doel te zetten of om ze aan te vallen.

Je kan meer informatie vinden in Schermen &gt; 'Mijn dorpen beheren' :)</value>
  </data>
</root>