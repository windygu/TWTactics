<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ChurchTooltip" xml:space="preserve">
    <value>Kerk level</value>
  </data>
  <data name="Difference" xml:space="preserve">
    <value>Ver.</value>
  </data>
  <data name="Kingdom" xml:space="preserve">
    <value>Continent</value>
  </data>
  <data name="KingdomTooltip" xml:space="preserve">
    <value>Het continent van het dorp</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>XY</value>
  </data>
  <data name="LocationTooltip" xml:space="preserve">
    <value>Coordinaten van het dorp</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Naam</value>
  </data>
  <data name="NameTooltip" xml:space="preserve">
    <value>Naam van het dorp</value>
  </data>
  <data name="Player" xml:space="preserve">
    <value>Speler</value>
  </data>
  <data name="PlayerDifferenceTooltip" xml:space="preserve">
    <value>De speler waarvan het dorp geëdeld is</value>
  </data>
  <data name="PlayerNameTooltip" xml:space="preserve">
    <value>Eigenaar van het dorp</value>
  </data>
  <data name="PlayerOld" xml:space="preserve">
    <value>Vorige speler</value>
  </data>
  <data name="PlayerPointsDiffTooltip" xml:space="preserve">
    <value>Puntenverschil speler sinds de laatste data download</value>
  </data>
  <data name="PlayerPointsTooltip" xml:space="preserve">
    <value>Punten van de eigenaar van het dorp</value>
  </data>
  <data name="Players" xml:space="preserve">
    <value>Spelers</value>
  </data>
  <data name="Player_NameTooltip" xml:space="preserve">
    <value>De naam van de speler</value>
  </data>
  <data name="Player_PointsDiffTooltip" xml:space="preserve">
    <value>Puntenverschil speler sinds de vorige data download</value>
  </data>
  <data name="Player_PointsTooltip" xml:space="preserve">
    <value>Punten van de speler</value>
  </data>
  <data name="Player_TribeOldTooltip" xml:space="preserve">
    <value>De stam waartoe de speler behoorde tijdens de vorige data download</value>
  </data>
  <data name="Player_TribeTooltip" xml:space="preserve">
    <value>De stam waartoe de speler behoort</value>
  </data>
  <data name="Player_VillagesDiffTooltip" xml:space="preserve">
    <value>Dorpen verloren/gewonnen sinds de vorige data download</value>
  </data>
  <data name="Player_VillagesTooltip" xml:space="preserve">
    <value>Dorpen van de speler</value>
  </data>
  <data name="Player_VisibleTooltip" xml:space="preserve">
    <value>Toon icon wanneer minstens 1 dorp van de speler zichtbaar is op de kaart</value>
  </data>
  <data name="Points" xml:space="preserve">
    <value>Punten</value>
  </data>
  <data name="PointsDifferenceTooltip" xml:space="preserve">
    <value>Puntenverschil dorp sinds de laatste data download</value>
  </data>
  <data name="PointsTooltip" xml:space="preserve">
    <value>Aantal punten van het dorp</value>
  </data>
  <data name="Rank" xml:space="preserve">
    <value>Rang</value>
  </data>
  <data name="Tribe" xml:space="preserve">
    <value>Stam</value>
  </data>
  <data name="TribeOld" xml:space="preserve">
    <value>Vorige stam</value>
  </data>
  <data name="TribeRankTooltip" xml:space="preserve">
    <value>De rank van de stam</value>
  </data>
  <data name="TribeTag" xml:space="preserve">
    <value>Tag</value>
  </data>
  <data name="TribeTagTooltip" xml:space="preserve">
    <value>De stam van de speler</value>
  </data>
  <data name="Tribe_NameTooltip" xml:space="preserve">
    <value>Stamnaam</value>
  </data>
  <data name="Tribe_PlayersDiffTooltip" xml:space="preserve">
    <value>Spelerswijzigingen in de stam sinds de vorige data download</value>
  </data>
  <data name="Tribe_PlayersTooltip" xml:space="preserve">
    <value>Spelers in de stam</value>
  </data>
  <data name="Tribe_PointsDiffTooltip" xml:space="preserve">
    <value>Het verschil in punten van de stam sinds de vorige data download</value>
  </data>
  <data name="Tribe_PointsTooltip" xml:space="preserve">
    <value>Totaal aantal punten van de stam</value>
  </data>
  <data name="Tribe_RankTooltip" xml:space="preserve">
    <value>Wereldrang van de stam</value>
  </data>
  <data name="Tribe_TagTooltip" xml:space="preserve">
    <value>Stam tag</value>
  </data>
  <data name="Tribe_VillagesDiffTooltip" xml:space="preserve">
    <value>Verschil in dorpen sinds de vorige data download</value>
  </data>
  <data name="Tribe_VillagesTooltip" xml:space="preserve">
    <value>Totaal aantal dorpen in de stam</value>
  </data>
  <data name="Tribe_VisibleTooltip" xml:space="preserve">
    <value>Toon icon wanneer minstens 1 dorp van de stam zichtbaar is op de kaart</value>
  </data>
  <data name="TypeTooltip" xml:space="preserve">
    <value>Toon icon voor dorpsdoel (Offensief, Defensief, ...) - Zet het dorpsdoel via het rechter muisklik menu.</value>
  </data>
  <data name="Villages" xml:space="preserve">
    <value>Dorpen</value>
  </data>
  <data name="VillagesDiffTooltip" xml:space="preserve">
    <value>Aantal dorpen dat de speler heeft bijgekregen/verloren sinds de laatste data download</value>
  </data>
  <data name="VillagesTooltip" xml:space="preserve">
    <value>Het aanal dorpen van de speler</value>
  </data>
  <data name="VillageType_Catapults" xml:space="preserve">
    <value>Katapulten</value>
  </data>
  <data name="VillageType_Comments" xml:space="preserve">
    <value>Commentaar</value>
  </data>
  <data name="VillageType_Defensive" xml:space="preserve">
    <value>Defensief</value>
  </data>
  <data name="VillageType_Farm" xml:space="preserve">
    <value>Leeg</value>
  </data>
  <data name="VillageType_Noble" xml:space="preserve">
    <value>Edels</value>
  </data>
  <data name="VillageType_Offensive" xml:space="preserve">
    <value>Aanvallend</value>
  </data>
  <data name="VillageType_Scouts" xml:space="preserve">
    <value>Verkenners</value>
  </data>
  <data name="VisibleCellTooltip" xml:space="preserve">
    <value>Momenteel zichtbaar op de kaart</value>
  </data>
  <data name="VisibleTooltip" xml:space="preserve">
    <value>Toon icon indien het dorp zichtbaar is op de kaart</value>
  </data>
</root>